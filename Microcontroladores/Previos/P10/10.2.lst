CCS PCM C Compiler, Version 5.093, 4770               26-may.-23 16:23

               Filename:   C:\Users\tobad\Desktop\p10\10.2.lst

               ROM used:   1497 words (18%)
                           Largest free fragment is 2048
               RAM used:   20 (5%) at main() level
                           48 (13%) worst case
               Stack used: 5 locations
               Stack size: 8

0000:  MOVLW  04
0001:  MOVWF  0A
0002:  GOTO   4CD
0003:  NOP
.................... #include <16f877a.h>                      // Incluir el archivo de encabezado espec√≠fico para el microcontrolador PIC 16F877A
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  28
0009:  RETLW  0C
000A:  RETLW  01
000B:  RETLW  06
000C:  DATA D6,37
000D:  DATA 6C,3A
000E:  DATA 61,35
000F:  DATA 65,1D
0010:  DATA 20,00
0011:  DATA D6,34
0012:  DATA 6E,1D
0013:  DATA A0,12
0014:  DATA 34,17
0015:  DATA 32,33
0016:  DATA A0,36
0017:  DATA 56,00
0018:  DATA 8A,06
0019:  DATA C3,20
001A:  DATA 44,14
001B:  DATA 31,18
001C:  DATA 20,31
001D:  DATA 69,3A
001E:  DATA F3,14
001F:  DATA 3A,10
0020:  DATA C4,32
0021:  DATA E3,34
0022:  DATA ED,30
0023:  DATA EC,1E
0024:  DATA 25,18
0025:  DATA 34,26
0026:  DATA 75,16
0027:  DATA 20,24
0028:  DATA 65,3C
0029:  DATA 61,32
002A:  DATA E5,31
002B:  DATA E9,36
002C:  DATA 61,36
002D:  DATA 3D,18
002E:  DATA D8,12
002F:  DATA 4C,2C
0030:  DATA 3B,10
0031:  DATA D0,27
0032:  DATA 52,2A
0033:  DATA C2,1E
0034:  DATA 30,2C
0035:  DATA 25,26
0036:  DATA 58,10
0037:  DATA 28,1C
0038:  DATA 20,31
0039:  DATA 69,3A
003A:  DATA F3,14
003B:  DATA 00,00
*
0180:  MOVF   0B,W
0181:  MOVWF  2B
0182:  BCF    0B.7
0183:  BSF    03.5
0184:  BSF    03.6
0185:  BSF    0C.7
0186:  BSF    0C.0
0187:  NOP
0188:  NOP
0189:  BCF    03.5
018A:  BCF    03.6
018B:  BTFSC  2B.7
018C:  BSF    0B.7
018D:  BSF    03.6
018E:  MOVF   0C,W
018F:  ANDLW  7F
0190:  BTFSC  03.2
0191:  GOTO   1D4
0192:  BCF    03.6
0193:  MOVWF  2B
0194:  BSF    03.6
0195:  MOVF   0D,W
0196:  BCF    03.6
0197:  MOVWF  2C
0198:  BSF    03.6
0199:  MOVF   0F,W
019A:  BCF    03.6
019B:  MOVWF  2D
019C:  MOVF   2B,W
019D:  MOVWF  3C
019E:  CALL   15B
019F:  MOVF   2C,W
01A0:  BSF    03.6
01A1:  MOVWF  0D
01A2:  BCF    03.6
01A3:  MOVF   2D,W
01A4:  BSF    03.6
01A5:  MOVWF  0F
01A6:  BCF    03.6
01A7:  MOVF   0B,W
01A8:  MOVWF  2E
01A9:  BCF    0B.7
01AA:  BSF    03.5
01AB:  BSF    03.6
01AC:  BSF    0C.7
01AD:  BSF    0C.0
01AE:  NOP
01AF:  NOP
01B0:  BCF    03.5
01B1:  BCF    03.6
01B2:  BTFSC  2E.7
01B3:  BSF    0B.7
01B4:  BSF    03.6
01B5:  RLF    0C,W
01B6:  RLF    0E,W
01B7:  ANDLW  7F
01B8:  BTFSC  03.2
01B9:  GOTO   1D4
01BA:  BCF    03.6
01BB:  MOVWF  2B
01BC:  BSF    03.6
01BD:  MOVF   0D,W
01BE:  BCF    03.6
01BF:  MOVWF  2C
01C0:  BSF    03.6
01C1:  MOVF   0F,W
01C2:  BCF    03.6
01C3:  MOVWF  2D
01C4:  MOVF   2B,W
01C5:  MOVWF  3C
01C6:  CALL   15B
01C7:  MOVF   2C,W
01C8:  BSF    03.6
01C9:  MOVWF  0D
01CA:  BCF    03.6
01CB:  MOVF   2D,W
01CC:  BSF    03.6
01CD:  MOVWF  0F
01CE:  INCF   0D,F
01CF:  BTFSC  03.2
01D0:  INCF   0F,F
01D1:  BCF    03.6
01D2:  GOTO   180
01D3:  BSF    03.6
01D4:  BCF    03.6
01D5:  BCF    0A.3
01D6:  BCF    0A.4
01D7:  GOTO   542 (RETURN)
01D8:  MOVLW  8E
01D9:  MOVWF  77
01DA:  MOVF   2C,W
01DB:  MOVWF  78
01DC:  MOVF   2B,W
01DD:  MOVWF  79
01DE:  CLRF   7A
01DF:  MOVF   78,F
01E0:  BTFSS  03.2
01E1:  GOTO   1EC
01E2:  MOVF   79,W
01E3:  MOVWF  78
01E4:  CLRF   79
01E5:  MOVLW  08
01E6:  SUBWF  77,F
01E7:  MOVF   78,F
01E8:  BTFSS  03.2
01E9:  GOTO   1EC
01EA:  CLRF   77
01EB:  GOTO   1F4
01EC:  BCF    03.0
01ED:  BTFSC  78.7
01EE:  GOTO   1F3
01EF:  RLF    79,F
01F0:  RLF    78,F
01F1:  DECF   77,F
01F2:  GOTO   1EC
01F3:  BCF    78.7
01F4:  BCF    0A.3
01F5:  BCF    0A.4
01F6:  GOTO   54C (RETURN)
01F7:  MOVF   3C,W
01F8:  BTFSC  03.2
01F9:  GOTO   267
01FA:  MOVWF  44
01FB:  MOVF   40,W
01FC:  BTFSC  03.2
01FD:  GOTO   267
01FE:  ADDWF  44,F
01FF:  BTFSC  03.0
0200:  GOTO   208
0201:  MOVLW  7F
0202:  SUBWF  44,F
0203:  BTFSS  03.0
0204:  GOTO   267
0205:  BTFSC  03.2
0206:  GOTO   267
0207:  GOTO   20C
0208:  MOVLW  81
0209:  ADDWF  44,F
020A:  BTFSC  03.0
020B:  GOTO   267
020C:  MOVF   44,W
020D:  MOVWF  77
020E:  CLRF   78
020F:  CLRF   79
0210:  CLRF   7A
0211:  MOVF   3D,W
0212:  MOVWF  48
0213:  BSF    48.7
0214:  MOVF   3E,W
0215:  MOVWF  47
0216:  MOVF   3F,W
0217:  MOVWF  46
0218:  MOVLW  18
0219:  MOVWF  44
021A:  CLRF   45
021B:  BTFSS  46.0
021C:  GOTO   235
021D:  MOVF   43,W
021E:  ADDWF  7A,F
021F:  BTFSS  03.0
0220:  GOTO   227
0221:  INCF   79,F
0222:  BTFSS  03.2
0223:  GOTO   227
0224:  INCF   78,F
0225:  BTFSC  03.2
0226:  BSF    45.7
0227:  MOVF   42,W
0228:  ADDWF  79,F
0229:  BTFSS  03.0
022A:  GOTO   22E
022B:  INCF   78,F
022C:  BTFSC  03.2
022D:  BSF    45.7
022E:  MOVF   41,W
022F:  MOVWF  3E
0230:  BSF    3E.7
0231:  MOVF   3E,W
0232:  ADDWF  78,F
0233:  BTFSC  03.0
0234:  BSF    45.7
0235:  RLF    45,F
0236:  RRF    78,F
0237:  RRF    79,F
0238:  RRF    7A,F
0239:  RRF    48,F
023A:  RRF    47,F
023B:  RRF    46,F
023C:  BCF    03.0
023D:  DECFSZ 44,F
023E:  GOTO   21A
023F:  MOVLW  01
0240:  ADDWF  77,F
0241:  BTFSC  03.0
0242:  GOTO   267
0243:  BTFSC  78.7
0244:  GOTO   24C
0245:  RLF    48,F
0246:  RLF    7A,F
0247:  RLF    79,F
0248:  RLF    78,F
0249:  DECF   77,F
024A:  BTFSC  03.2
024B:  GOTO   267
024C:  BTFSS  48.7
024D:  GOTO   25D
024E:  INCF   7A,F
024F:  BTFSS  03.2
0250:  GOTO   25D
0251:  INCF   79,F
0252:  BTFSS  03.2
0253:  GOTO   25D
0254:  INCF   78,F
0255:  BTFSS  03.2
0256:  GOTO   25D
0257:  RRF    78,F
0258:  RRF    79,F
0259:  RRF    7A,F
025A:  INCF   77,F
025B:  BTFSC  03.2
025C:  GOTO   267
025D:  MOVF   3D,W
025E:  MOVWF  45
025F:  MOVF   41,W
0260:  XORWF  45,F
0261:  BTFSS  45.7
0262:  GOTO   265
0263:  BSF    78.7
0264:  GOTO   26B
0265:  BCF    78.7
0266:  GOTO   26B
0267:  CLRF   77
0268:  CLRF   78
0269:  CLRF   79
026A:  CLRF   7A
026B:  RETURN
026C:  MOVF   0B,W
026D:  MOVWF  30
026E:  BCF    0B.7
026F:  BSF    03.5
0270:  BSF    03.6
0271:  BSF    0C.7
0272:  BSF    0C.0
0273:  NOP
0274:  NOP
0275:  BCF    03.5
0276:  BCF    03.6
0277:  BTFSC  30.7
0278:  BSF    0B.7
0279:  BTFSC  03.0
027A:  GOTO   2A3
027B:  BSF    03.6
027C:  MOVF   0C,W
027D:  ANDLW  7F
027E:  BCF    03.6
027F:  MOVWF  30
0280:  BSF    03.6
0281:  MOVF   0D,W
0282:  BCF    03.6
0283:  MOVWF  31
0284:  BSF    03.6
0285:  MOVF   0F,W
0286:  BCF    03.6
0287:  MOVWF  32
0288:  MOVF   30,W
0289:  MOVWF  3C
028A:  CALL   15B
028B:  MOVF   31,W
028C:  BSF    03.6
028D:  MOVWF  0D
028E:  BCF    03.6
028F:  MOVF   32,W
0290:  BSF    03.6
0291:  MOVWF  0F
0292:  BCF    03.6
0293:  MOVF   0B,W
0294:  MOVWF  33
0295:  BCF    0B.7
0296:  BSF    03.5
0297:  BSF    03.6
0298:  BSF    0C.7
0299:  BSF    0C.0
029A:  NOP
029B:  NOP
029C:  BCF    03.5
029D:  BCF    03.6
029E:  BTFSC  33.7
029F:  BSF    0B.7
02A0:  DECFSZ 2F,F
02A1:  GOTO   2A3
02A2:  GOTO   2C2
02A3:  BSF    03.6
02A4:  RLF    0C,W
02A5:  RLF    0E,W
02A6:  ANDLW  7F
02A7:  BCF    03.6
02A8:  MOVWF  30
02A9:  BSF    03.6
02AA:  MOVF   0D,W
02AB:  BCF    03.6
02AC:  MOVWF  31
02AD:  BSF    03.6
02AE:  MOVF   0F,W
02AF:  BCF    03.6
02B0:  MOVWF  32
02B1:  MOVF   30,W
02B2:  MOVWF  3C
02B3:  CALL   15B
02B4:  MOVF   31,W
02B5:  BSF    03.6
02B6:  MOVWF  0D
02B7:  BCF    03.6
02B8:  MOVF   32,W
02B9:  BSF    03.6
02BA:  MOVWF  0F
02BB:  INCF   0D,F
02BC:  BTFSC  03.2
02BD:  INCF   0F,F
02BE:  BCF    03.0
02BF:  BCF    03.6
02C0:  DECFSZ 2F,F
02C1:  GOTO   26C
02C2:  BCF    0A.3
02C3:  BCF    0A.4
02C4:  GOTO   56F (RETURN)
02C5:  BTFSC  03.1
02C6:  GOTO   2CA
02C7:  MOVLW  44
02C8:  MOVWF  04
02C9:  BCF    03.7
02CA:  CLRF   77
02CB:  CLRF   78
02CC:  CLRF   79
02CD:  CLRF   7A
02CE:  CLRF   44
02CF:  CLRF   45
02D0:  CLRF   46
02D1:  CLRF   47
02D2:  MOVF   43,W
02D3:  IORWF  42,W
02D4:  IORWF  41,W
02D5:  IORWF  40,W
02D6:  BTFSC  03.2
02D7:  GOTO   308
02D8:  MOVLW  20
02D9:  MOVWF  48
02DA:  BCF    03.0
02DB:  RLF    3C,F
02DC:  RLF    3D,F
02DD:  RLF    3E,F
02DE:  RLF    3F,F
02DF:  RLF    44,F
02E0:  RLF    45,F
02E1:  RLF    46,F
02E2:  RLF    47,F
02E3:  MOVF   43,W
02E4:  SUBWF  47,W
02E5:  BTFSS  03.2
02E6:  GOTO   2F1
02E7:  MOVF   42,W
02E8:  SUBWF  46,W
02E9:  BTFSS  03.2
02EA:  GOTO   2F1
02EB:  MOVF   41,W
02EC:  SUBWF  45,W
02ED:  BTFSS  03.2
02EE:  GOTO   2F1
02EF:  MOVF   40,W
02F0:  SUBWF  44,W
02F1:  BTFSS  03.0
02F2:  GOTO   302
02F3:  MOVF   40,W
02F4:  SUBWF  44,F
02F5:  MOVF   41,W
02F6:  BTFSS  03.0
02F7:  INCFSZ 41,W
02F8:  SUBWF  45,F
02F9:  MOVF   42,W
02FA:  BTFSS  03.0
02FB:  INCFSZ 42,W
02FC:  SUBWF  46,F
02FD:  MOVF   43,W
02FE:  BTFSS  03.0
02FF:  INCFSZ 43,W
0300:  SUBWF  47,F
0301:  BSF    03.0
0302:  RLF    77,F
0303:  RLF    78,F
0304:  RLF    79,F
0305:  RLF    7A,F
0306:  DECFSZ 48,F
0307:  GOTO   2DA
0308:  MOVF   44,W
0309:  MOVWF  00
030A:  INCF   04,F
030B:  MOVF   45,W
030C:  MOVWF  00
030D:  INCF   04,F
030E:  MOVF   46,W
030F:  MOVWF  00
0310:  INCF   04,F
0311:  MOVF   47,W
0312:  MOVWF  00
0313:  RETURN
0314:  MOVF   04,W
0315:  MOVWF  34
0316:  MOVF   33,W
0317:  MOVWF  36
0318:  BTFSC  03.2
0319:  GOTO   333
031A:  MOVF   32,W
031B:  MOVWF  3F
031C:  MOVF   31,W
031D:  MOVWF  3E
031E:  MOVF   30,W
031F:  MOVWF  3D
0320:  MOVF   2F,W
0321:  MOVWF  3C
0322:  CLRF   43
0323:  CLRF   42
0324:  MOVLW  20
0325:  MOVWF  41
0326:  MOVLW  82
0327:  MOVWF  40
0328:  CALL   1F7
0329:  MOVF   7A,W
032A:  MOVWF  32
032B:  MOVF   79,W
032C:  MOVWF  31
032D:  MOVF   78,W
032E:  MOVWF  30
032F:  MOVF   77,W
0330:  MOVWF  2F
0331:  DECFSZ 36,F
0332:  GOTO   31A
0333:  MOVF   32,W
0334:  MOVWF  3F
0335:  MOVF   31,W
0336:  MOVWF  3E
0337:  MOVF   30,W
0338:  MOVWF  3D
0339:  MOVF   2F,W
033A:  MOVWF  3C
033B:  MOVF   3C,W
033C:  SUBLW  B6
033D:  MOVWF  3C
033E:  CLRF   7A
033F:  MOVF   3D,W
0340:  MOVWF  40
0341:  BSF    3D.7
0342:  BCF    03.0
0343:  RRF    3D,F
0344:  RRF    3E,F
0345:  RRF    3F,F
0346:  RRF    7A,F
0347:  RRF    79,F
0348:  RRF    78,F
0349:  RRF    77,F
034A:  DECFSZ 3C,F
034B:  GOTO   342
034C:  BTFSS  40.7
034D:  GOTO   359
034E:  COMF   77,F
034F:  COMF   78,F
0350:  COMF   79,F
0351:  COMF   7A,F
0352:  INCF   77,F
0353:  BTFSC  03.2
0354:  INCF   78,F
0355:  BTFSC  03.2
0356:  INCF   79,F
0357:  BTFSC  03.2
0358:  INCF   7A,F
0359:  MOVF   7A,W
035A:  MOVWF  32
035B:  MOVF   79,W
035C:  MOVWF  31
035D:  MOVF   78,W
035E:  MOVWF  30
035F:  MOVF   77,W
0360:  MOVWF  2F
0361:  BTFSS  32.7
0362:  GOTO   370
0363:  DECF   34,F
0364:  BSF    34.5
0365:  COMF   2F,F
0366:  COMF   30,F
0367:  COMF   31,F
0368:  COMF   32,F
0369:  INCF   2F,F
036A:  BTFSC  03.2
036B:  INCF   30,F
036C:  BTFSC  03.2
036D:  INCF   31,F
036E:  BTFSC  03.2
036F:  INCF   32,F
0370:  MOVLW  3B
0371:  MOVWF  3B
0372:  MOVLW  9A
0373:  MOVWF  3A
0374:  MOVLW  CA
0375:  MOVWF  39
0376:  CLRF   38
0377:  MOVLW  0A
0378:  MOVWF  36
0379:  MOVF   33,W
037A:  BTFSC  03.2
037B:  INCF   34,F
037C:  BSF    03.1
037D:  MOVLW  2F
037E:  MOVWF  04
037F:  BCF    03.7
0380:  MOVF   32,W
0381:  MOVWF  3F
0382:  MOVF   31,W
0383:  MOVWF  3E
0384:  MOVF   30,W
0385:  MOVWF  3D
0386:  MOVF   2F,W
0387:  MOVWF  3C
0388:  MOVF   3B,W
0389:  MOVWF  43
038A:  MOVF   3A,W
038B:  MOVWF  42
038C:  MOVF   39,W
038D:  MOVWF  41
038E:  MOVF   38,W
038F:  MOVWF  40
0390:  CALL   2C5
0391:  MOVF   78,W
0392:  MOVF   77,F
0393:  BTFSS  03.2
0394:  GOTO   3A8
0395:  INCF   33,W
0396:  SUBWF  36,W
0397:  BTFSC  03.2
0398:  GOTO   3A8
0399:  MOVF   34,W
039A:  BTFSC  03.2
039B:  GOTO   3AA
039C:  ANDLW  0F
039D:  SUBWF  36,W
039E:  BTFSC  03.2
039F:  GOTO   3A2
03A0:  BTFSC  03.0
03A1:  GOTO   3DA
03A2:  BTFSC  34.7
03A3:  GOTO   3DA
03A4:  BTFSC  34.6
03A5:  GOTO   3AA
03A6:  MOVLW  20
03A7:  GOTO   3D6
03A8:  MOVLW  20
03A9:  ANDWF  34,F
03AA:  BTFSS  34.5
03AB:  GOTO   3B8
03AC:  BCF    34.5
03AD:  MOVF   33,W
03AE:  BTFSS  03.2
03AF:  DECF   34,F
03B0:  MOVF   77,W
03B1:  MOVWF  34
03B2:  MOVLW  2D
03B3:  MOVWF  3C
03B4:  CALL   15B
03B5:  MOVF   34,W
03B6:  MOVWF  77
03B7:  CLRF   34
03B8:  MOVF   33,W
03B9:  SUBWF  36,W
03BA:  BTFSS  03.2
03BB:  GOTO   3C6
03BC:  MOVF   77,W
03BD:  MOVWF  34
03BE:  MOVLW  2E
03BF:  MOVWF  3C
03C0:  CALL   15B
03C1:  MOVF   34,W
03C2:  MOVWF  77
03C3:  MOVLW  20
03C4:  ANDWF  34,F
03C5:  MOVLW  00
03C6:  MOVLW  30
03C7:  BTFSS  34.5
03C8:  GOTO   3D6
03C9:  BCF    34.5
03CA:  MOVF   33,W
03CB:  BTFSS  03.2
03CC:  DECF   34,F
03CD:  MOVF   77,W
03CE:  MOVWF  34
03CF:  MOVLW  2D
03D0:  MOVWF  3C
03D1:  CALL   15B
03D2:  MOVF   34,W
03D3:  MOVWF  77
03D4:  CLRF   34
03D5:  MOVLW  30
03D6:  ADDWF  77,F
03D7:  MOVF   77,W
03D8:  MOVWF  3C
03D9:  CALL   15B
03DA:  BCF    03.1
03DB:  MOVF   3B,W
03DC:  MOVWF  3F
03DD:  MOVF   3A,W
03DE:  MOVWF  3E
03DF:  MOVF   39,W
03E0:  MOVWF  3D
03E1:  MOVF   38,W
03E2:  MOVWF  3C
03E3:  CLRF   43
03E4:  CLRF   42
03E5:  CLRF   41
03E6:  MOVLW  0A
03E7:  MOVWF  40
03E8:  CALL   2C5
03E9:  MOVF   7A,W
03EA:  MOVWF  3B
03EB:  MOVF   79,W
03EC:  MOVWF  3A
03ED:  MOVF   78,W
03EE:  MOVWF  39
03EF:  MOVF   77,W
03F0:  MOVWF  38
03F1:  DECFSZ 36,F
03F2:  GOTO   37C
03F3:  BCF    0A.3
03F4:  BCF    0A.4
03F5:  GOTO   57C (RETURN)
03F6:  MOVF   0B,W
03F7:  MOVWF  2E
03F8:  BCF    0B.7
03F9:  BSF    03.5
03FA:  BSF    03.6
03FB:  BSF    0C.7
03FC:  BSF    0C.0
03FD:  NOP
03FE:  NOP
03FF:  BCF    03.5
0400:  BCF    03.6
0401:  BTFSC  2E.7
0402:  BSF    0B.7
0403:  BTFSC  03.0
0404:  GOTO   42E
0405:  BSF    03.6
0406:  MOVF   0C,W
0407:  ANDLW  7F
0408:  BCF    03.6
0409:  MOVWF  2E
040A:  BSF    03.6
040B:  MOVF   0D,W
040C:  BCF    03.6
040D:  MOVWF  2F
040E:  BSF    03.6
040F:  MOVF   0F,W
0410:  BCF    03.6
0411:  MOVWF  30
0412:  MOVF   2E,W
0413:  BTFSS  0C.4
0414:  GOTO   413
0415:  MOVWF  19
0416:  MOVF   2F,W
0417:  BSF    03.6
0418:  MOVWF  0D
0419:  BCF    03.6
041A:  MOVF   30,W
041B:  BSF    03.6
041C:  MOVWF  0F
041D:  BCF    03.6
041E:  MOVF   0B,W
041F:  MOVWF  31
0420:  BCF    0B.7
0421:  BSF    03.5
0422:  BSF    03.6
0423:  BSF    0C.7
0424:  BSF    0C.0
0425:  NOP
0426:  NOP
0427:  BCF    03.5
0428:  BCF    03.6
0429:  BTFSC  31.7
042A:  BSF    0B.7
042B:  DECFSZ 2D,F
042C:  GOTO   42E
042D:  GOTO   44E
042E:  BSF    03.6
042F:  RLF    0C,W
0430:  RLF    0E,W
0431:  ANDLW  7F
0432:  BCF    03.6
0433:  MOVWF  2E
0434:  BSF    03.6
0435:  MOVF   0D,W
0436:  BCF    03.6
0437:  MOVWF  2F
0438:  BSF    03.6
0439:  MOVF   0F,W
043A:  BCF    03.6
043B:  MOVWF  30
043C:  MOVF   2E,W
043D:  BTFSS  0C.4
043E:  GOTO   43D
043F:  MOVWF  19
0440:  MOVF   2F,W
0441:  BSF    03.6
0442:  MOVWF  0D
0443:  BCF    03.6
0444:  MOVF   30,W
0445:  BSF    03.6
0446:  MOVWF  0F
0447:  INCF   0D,F
0448:  BTFSC  03.2
0449:  INCF   0F,F
044A:  BCF    03.0
044B:  BCF    03.6
044C:  DECFSZ 2D,F
044D:  GOTO   3F6
044E:  RETURN
044F:  CLRF   35
0450:  MOVF   04,W
0451:  MOVWF  34
0452:  BCF    35.0
0453:  BTFSC  03.7
0454:  BSF    35.0
0455:  SWAPF  2E,W
0456:  IORLW  F0
0457:  MOVWF  30
0458:  ADDWF  30,F
0459:  ADDLW  E2
045A:  MOVWF  31
045B:  ADDLW  32
045C:  MOVWF  33
045D:  MOVF   2E,W
045E:  ANDLW  0F
045F:  ADDWF  31,F
0460:  ADDWF  31,F
0461:  ADDWF  33,F
0462:  ADDLW  E9
0463:  MOVWF  32
0464:  ADDWF  32,F
0465:  ADDWF  32,F
0466:  SWAPF  2D,W
0467:  ANDLW  0F
0468:  ADDWF  32,F
0469:  ADDWF  33,F
046A:  RLF    32,F
046B:  RLF    33,F
046C:  COMF   33,F
046D:  RLF    33,F
046E:  MOVF   2D,W
046F:  ANDLW  0F
0470:  ADDWF  33,F
0471:  RLF    30,F
0472:  MOVLW  07
0473:  MOVWF  2F
0474:  MOVLW  0A
0475:  ADDWF  33,F
0476:  DECF   32,F
0477:  BTFSS  03.0
0478:  GOTO   475
0479:  ADDWF  32,F
047A:  DECF   31,F
047B:  BTFSS  03.0
047C:  GOTO   479
047D:  ADDWF  31,F
047E:  DECF   30,F
047F:  BTFSS  03.0
0480:  GOTO   47D
0481:  ADDWF  30,F
0482:  DECF   2F,F
0483:  BTFSS  03.0
0484:  GOTO   481
0485:  MOVLW  2F
0486:  MOVWF  04
0487:  BCF    03.7
0488:  MOVLW  07
0489:  ANDWF  34,W
048A:  BCF    34.6
048B:  ADDWF  04,F
048C:  MOVLW  33
048D:  SUBWF  04,W
048E:  BTFSC  03.2
048F:  BSF    34.6
0490:  MOVF   00,W
0491:  MOVWF  77
0492:  BTFSS  03.2
0493:  GOTO   49C
0494:  BTFSC  34.6
0495:  GOTO   49C
0496:  BTFSC  34.4
0497:  GOTO   4A4
0498:  BTFSC  34.3
0499:  GOTO   49C
049A:  MOVLW  20
049B:  GOTO   49F
049C:  BSF    34.3
049D:  BCF    34.4
049E:  MOVLW  30
049F:  ADDWF  77,F
04A0:  MOVF   77,W
04A1:  BTFSS  0C.4
04A2:  GOTO   4A1
04A3:  MOVWF  19
04A4:  INCF   04,F
04A5:  BTFSS  34.6
04A6:  GOTO   48C
04A7:  BCF    0A.3
04A8:  BCF    0A.4
04A9:  GOTO   59E (RETURN)
04AA:  BTFSC  2E.7
04AB:  GOTO   4BD
04AC:  MOVLW  0F
04AD:  MOVWF  77
04AE:  SWAPF  2D,W
04AF:  ANDWF  77,F
04B0:  MOVLW  0A
04B1:  SUBWF  77,W
04B2:  BTFSC  03.0
04B3:  GOTO   4B7
04B4:  MOVLW  30
04B5:  ADDWF  77,F
04B6:  GOTO   4B9
04B7:  MOVF   2E,W
04B8:  ADDWF  77,F
04B9:  MOVF   77,W
04BA:  BTFSS  0C.4
04BB:  GOTO   4BA
04BC:  MOVWF  19
04BD:  MOVLW  0F
04BE:  ANDWF  2D,F
04BF:  MOVLW  0A
04C0:  SUBWF  2D,W
04C1:  BTFSC  03.0
04C2:  GOTO   4C5
04C3:  MOVLW  30
04C4:  GOTO   4C7
04C5:  BCF    2E.7
04C6:  MOVF   2E,W
04C7:  ADDWF  2D,F
04C8:  MOVF   2D,W
04C9:  BTFSS  0C.4
04CA:  GOTO   4C9
04CB:  MOVWF  19
04CC:  RETURN
.................... 
.................... #list
.................... 
.................... 
.................... #fuses HS,NOWDT,NOPROTECT                // Configurar los fusibles del microcontrolador (oscilador de alta velocidad, sin temporizador de vigilancia, sin protecci√≥n de escritura)
.................... 
.................... #device ADC=10                           // Configurar el conversor anal√≥gico-digital (ADC) para 10 bits
.................... 
.................... #use delay(clock=20000000)               // Configurar la biblioteca de retraso para un reloj de 20 MHz
*
003C:  MOVLW  3D
003D:  MOVWF  04
003E:  BCF    03.7
003F:  MOVF   00,W
0040:  BTFSC  03.2
0041:  GOTO   04F
0042:  MOVLW  06
0043:  MOVWF  78
0044:  CLRF   77
0045:  DECFSZ 77,F
0046:  GOTO   045
0047:  DECFSZ 78,F
0048:  GOTO   044
0049:  MOVLW  7B
004A:  MOVWF  77
004B:  DECFSZ 77,F
004C:  GOTO   04B
004D:  DECFSZ 00,F
004E:  GOTO   042
004F:  RETURN
.................... 
.................... #use rs232(baud=57600, xmit=PIN_C6, rcv=PIN_C7)   // Configurar el m√≥dulo de comunicaci√≥n serial RS-232 (57600 baudios, pines de transmisi√≥n y recepci√≥n)
.................... #use i2c(MASTER, SDA=PIN_C4, SCL=PIN_C3,SLOW, NOFORCE_SW)
0050:  BCF    14.7
0051:  BCF    0C.3
0052:  MOVF   4A,W
0053:  MOVWF  13
0054:  MOVLW  02
0055:  BTFSC  14.7
0056:  GOTO   05E
0057:  BTFSS  0C.3
0058:  GOTO   057
0059:  MOVLW  00
005A:  BSF    03.5
005B:  BTFSC  11.6
005C:  MOVLW  01
005D:  BCF    03.5
005E:  MOVWF  78
005F:  RETURN
.................... #include <i2c_LCD.c>                         // Incluir el archivo de la biblioteca LCD
.................... //----------------------------------------------------------------------------- 
.................... // Title:         i2c_Flex_LCD 
.................... // Description:   Driver for common LCD with 1/2/3 or 4 rows by 1...20 columns 
.................... //                using PCF8574T interface board with I2C protocol. 
.................... // Date:          Nov-2013 
.................... // Ver.Rev.:      1.1 
.................... // Author:        Hugo Silva (sergio-hugo@bol.com.br) #Based on the routines of 
.................... //                "20X4_LCD_I2C_DRIVER.h" from Pumrin S. and "lcd4_i2c.c" from XP8100 
.................... //----------------------------------------------------------------------------- 
.................... // 
.................... // lcd_init() Must be called before any other function. 
.................... // 
.................... // lcd_putc(c) Will display c on the next position of the LCD. 
.................... //  
.................... //     \f Clear LCD display 
.................... //     \n Set write position on next lcd line 
.................... //     \b LCD backspace 
.................... //     lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1) 
.................... // 
.................... // lcd_backlight_led(ON)/lcd_backlight_led(OFF) = Turn ON/OFF LCD Backlight LED 
.................... // 
.................... //----------------------------------------------------------------------------- 
.................... // LCD pins D0-D3 are not used. 
.................... //----------------------------------------------------------------------------- 
.................... // 
.................... // Comment   : Control of a compatible LCD (1...4 rows by 1...4 columns) from 
.................... //              a bus I2C with an EXPANDER of I/O with connection I2C. 
.................... //              The tests of these routines have been programmed using the IC 
.................... //              Phillips PCF8574T. I've used 4 bits mode programming. 
.................... //              The 8 bits mode programming is possible if you use 2 x PCF8574T. 
.................... //              RW Pin is not being used. 
.................... // 
.................... // As defined in the following structure the pin connection is as follows: 
.................... // 
.................... //  PCF8574P     LCD 
.................... //  ========     ====== 
.................... //     P0        RS 
.................... //     P1        RW    (Not used!) 
.................... //     P2        Enable  
.................... //     P3        Led Backlight 
.................... //     P4        D4 
.................... //     P5        D5 
.................... //     P6        D6 
.................... //     P7        D7 
.................... // 
.................... //  The SCL and SDA pins should be pull-up resistor as shown below: 
.................... // 
.................... //             +5v 
.................... //               | 
.................... //               < 
.................... //               > 4.7K        
.................... //               <          
.................... //To PIC         |          To i2c slave 
.................... //pin xx ------------------ SDA pin  
.................... //(SDA)                      
.................... //              +5v 
.................... //               | 
.................... //               < 
.................... //               > 4.7K        
.................... //               <          
.................... //To PIC         |          To i2c slave 
.................... //pin xx ------------------ SCL pin  
.................... //(SCL) 
.................... // 
.................... //To PIC                    To i2c slave 
.................... //Vss pin ----------------- Vss or ground pin  
.................... //                | 
.................... //              ----- 
.................... //               ---  Ground 
.................... //                -  
.................... //  
.................... // THIS DOCUMENT IS PROVIDED TO THE USER "AS IS" 
.................... //----------------------------------------------------------------------------- 
.................... byte LCD_ADDR ;//             0x4E        //I2C slave address for LCD module 
.................... byte lcd_total_rows ;//       2           //Number of rows: 1,2,3 or 4 
.................... byte lcd_total_columns ;//    16          //Number of columns: 1...20   
.................... 
.................... #define RS                    0b00000001  //P0 - PCF8574T Pin connected to RS 
.................... #define RW                    0b00000010  //P1 - PCF8574T Pin connected to RW 
.................... #define ENABLE                0b00000100  //P2 - PCF8574T Pin connected to EN 
.................... #define LCD_BACKLIGHT         0b00001000  //P3 - PCF8574T Pin connected to BACKLIGHT LED 
.................... 
.................... #define addr_row_one          0x00        //LCD RAM address for row 1 
.................... #define addr_row_two          0x40        //LCD RAM address for row 2 
.................... #define addr_row_three        0x14        //LCD RAM address for row 3 
.................... #define addr_row_four         0x54        //LCD RAM address for row 4 
.................... 
.................... #define ON                    1 
.................... #define OFF                   0 
.................... #define NOT                   ~ 
.................... #define data_shifted          data<<4 
.................... int8 new_row_request=1, BACKLIGHT_LED=LCD_BACKLIGHT; 
.................... 
.................... void lcd_backlight_led(byte bl) 
.................... {  
....................       If (bl) BACKLIGHT_LED=LCD_BACKLIGHT; else BACKLIGHT_LED=OFF; 
.................... } 
.................... 
.................... void i2c_send_nibble(byte data, byte type) 
.................... {    
....................    switch (type) 
0060:  MOVF   48,W
0061:  XORLW  00
0062:  BTFSC  03.2
0063:  GOTO   068
0064:  XORLW  01
0065:  BTFSC  03.2
0066:  GOTO   08B
0067:  GOTO   0AF
....................    {      
....................       case 0 :      
....................       i2c_write(data_shifted | BACKLIGHT_LED); 
0068:  SWAPF  47,W
0069:  MOVWF  77
006A:  MOVLW  F0
006B:  ANDWF  77,F
006C:  MOVF   77,W
006D:  IORWF  25,W
006E:  MOVWF  49
006F:  MOVWF  4A
0070:  CALL   050
....................       delay_cycles(1); 
0071:  NOP
....................       i2c_write(data_shifted | ENABLE | BACKLIGHT_LED ); 
0072:  SWAPF  47,W
0073:  MOVWF  77
0074:  MOVLW  F0
0075:  ANDWF  77,F
0076:  MOVF   77,W
0077:  IORLW  04
0078:  IORWF  25,W
0079:  MOVWF  49
007A:  MOVWF  4A
007B:  CALL   050
....................       delay_us(2); 
007C:  MOVLW  03
007D:  MOVWF  77
007E:  DECFSZ 77,F
007F:  GOTO   07E
....................       i2c_write(data_shifted & NOT ENABLE | BACKLIGHT_LED); 
0080:  SWAPF  47,W
0081:  MOVWF  77
0082:  MOVLW  F0
0083:  ANDWF  77,F
0084:  MOVF   77,W
0085:  ANDLW  FB
0086:  IORWF  25,W
0087:  MOVWF  49
0088:  MOVWF  4A
0089:  CALL   050
....................       break; 
008A:  GOTO   0AF
....................       
....................       case 1 : 
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED); 
008B:  SWAPF  47,W
008C:  MOVWF  77
008D:  MOVLW  F0
008E:  ANDWF  77,F
008F:  MOVF   77,W
0090:  IORLW  01
0091:  IORWF  25,W
0092:  MOVWF  49
0093:  MOVWF  4A
0094:  CALL   050
....................       delay_cycles(1); 
0095:  NOP
....................       i2c_write(data_shifted | RS | ENABLE | BACKLIGHT_LED ); 
0096:  SWAPF  47,W
0097:  MOVWF  77
0098:  MOVLW  F0
0099:  ANDWF  77,F
009A:  MOVF   77,W
009B:  IORLW  01
009C:  IORLW  04
009D:  IORWF  25,W
009E:  MOVWF  49
009F:  MOVWF  4A
00A0:  CALL   050
....................       delay_us(2); 
00A1:  MOVLW  03
00A2:  MOVWF  77
00A3:  DECFSZ 77,F
00A4:  GOTO   0A3
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED); 
00A5:  SWAPF  47,W
00A6:  MOVWF  77
00A7:  MOVLW  F0
00A8:  ANDWF  77,F
00A9:  MOVF   77,W
00AA:  IORLW  01
00AB:  IORWF  25,W
00AC:  MOVWF  49
00AD:  MOVWF  4A
00AE:  CALL   050
....................       break; 
....................    } 
00AF:  RETURN
.................... } 
....................     
.................... void lcd_send_byte(byte data, byte type) 
....................    { 
....................         i2c_start(); 
00B0:  BSF    03.5
00B1:  BSF    11.0
00B2:  BTFSC  11.0
00B3:  GOTO   0B2
....................         i2c_write(LCD_ADDR); 
00B4:  BCF    03.5
00B5:  MOVF   21,W
00B6:  MOVWF  4A
00B7:  CALL   050
....................         i2c_send_nibble(data >> 4 , type); 
00B8:  SWAPF  44,W
00B9:  MOVWF  46
00BA:  MOVLW  0F
00BB:  ANDWF  46,F
00BC:  MOVF   46,W
00BD:  MOVWF  47
00BE:  MOVF   45,W
00BF:  MOVWF  48
00C0:  CALL   060
....................         i2c_send_nibble(data & 0xf , type); 
00C1:  MOVF   44,W
00C2:  ANDLW  0F
00C3:  MOVWF  46
00C4:  MOVWF  47
00C5:  MOVF   45,W
00C6:  MOVWF  48
00C7:  CALL   060
....................         i2c_stop();        
00C8:  BSF    03.5
00C9:  BSF    11.2
00CA:  BTFSC  11.2
00CB:  GOTO   0CA
00CC:  BCF    03.5
00CD:  RETURN
....................    } 
.................... 
.................... void lcd_clear() 
.................... {  
....................         lcd_send_byte(0x01,0); 
00CE:  MOVLW  01
00CF:  MOVWF  44
00D0:  CLRF   45
00D1:  CALL   0B0
....................         delay_ms(2); 
00D2:  MOVLW  02
00D3:  MOVWF  3D
00D4:  CALL   03C
....................         new_row_request=1; 
00D5:  MOVLW  01
00D6:  MOVWF  24
00D7:  RETURN
.................... } 
.................... 
.................... void lcd_init(byte ADDR, byte col, byte row) 
.................... { 
....................    byte i;
....................    byte CONST lcd_type=2;  // 0=5x7, 1=5x10, 2=2 lines 
....................    byte CONST LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; // These bytes need to be sent to the LCD to start it up.
....................    
....................    LCD_ADDR =ADDR;//             0x4E        //I2C slave address for LCD module 
00D8:  MOVF   2B,W
00D9:  MOVWF  21
....................    lcd_total_rows =row;//       2           //Number of rows: 1,2,3 or 4 
00DA:  MOVF   2D,W
00DB:  MOVWF  22
....................    lcd_total_columns= col ;
00DC:  MOVF   2C,W
00DD:  MOVWF  23
....................    disable_interrupts(GLOBAL); 
00DE:  BCF    0B.6
00DF:  BCF    0B.7
00E0:  BTFSC  0B.7
00E1:  GOTO   0DF
....................    delay_ms(50); //LCD power up delay 
00E2:  MOVLW  32
00E3:  MOVWF  3D
00E4:  CALL   03C
....................     
....................    i2c_start(); 
00E5:  BSF    03.5
00E6:  BSF    11.0
00E7:  BTFSC  11.0
00E8:  GOTO   0E7
....................    i2c_write(LCD_ADDR); 
00E9:  BCF    03.5
00EA:  MOVF   21,W
00EB:  MOVWF  4A
00EC:  CALL   050
....................       i2c_send_nibble(0x00,0); 
00ED:  CLRF   47
00EE:  CLRF   48
00EF:  CALL   060
....................       delay_ms(15); 
00F0:  MOVLW  0F
00F1:  MOVWF  3D
00F2:  CALL   03C
....................     
....................    for (i=1;i<=3;++i)    
00F3:  MOVLW  01
00F4:  MOVWF  2E
00F5:  MOVF   2E,W
00F6:  SUBLW  03
00F7:  BTFSS  03.0
00F8:  GOTO   102
....................    { 
....................       i2c_send_nibble(0x03,0); 
00F9:  MOVLW  03
00FA:  MOVWF  47
00FB:  CLRF   48
00FC:  CALL   060
....................       delay_ms(5); 
00FD:  MOVLW  05
00FE:  MOVWF  3D
00FF:  CALL   03C
0100:  INCF   2E,F
0101:  GOTO   0F5
....................    }    
....................       i2c_send_nibble(0x02,0); 
0102:  MOVLW  02
0103:  MOVWF  47
0104:  CLRF   48
0105:  CALL   060
....................       delay_ms(5); 
0106:  MOVLW  05
0107:  MOVWF  3D
0108:  CALL   03C
....................    i2c_stop(); 
0109:  BSF    03.5
010A:  BSF    11.2
010B:  BTFSC  11.2
010C:  GOTO   10B
....................     
....................    for (i=0;i<=3;++i) { 
010D:  BCF    03.5
010E:  CLRF   2E
010F:  MOVF   2E,W
0110:  SUBLW  03
0111:  BTFSS  03.0
0112:  GOTO   11E
....................    lcd_send_byte(LCD_INIT_STRING[i],0); 
0113:  MOVF   2E,W
0114:  CALL   004
0115:  MOVWF  2F
0116:  MOVWF  44
0117:  CLRF   45
0118:  CALL   0B0
....................    delay_ms(5); 
0119:  MOVLW  05
011A:  MOVWF  3D
011B:  CALL   03C
011C:  INCF   2E,F
011D:  GOTO   10F
....................    } 
....................    lcd_clear();  //Clear Display 
011E:  CALL   0CE
....................    enable_interrupts(GLOBAL); 
011F:  MOVLW  C0
0120:  IORWF  0B,F
0121:  BCF    0A.3
0122:  BCF    0A.4
0123:  GOTO   503 (RETURN)
.................... } 
.................... 
.................... void lcd_gotoxy( byte x, byte y) 
.................... { 
.................... byte row,column,row_addr,lcd_address; 
.................... static char data; 
*
04FA:  BCF    03.5
04FB:  CLRF   26
.................... 
....................    if (y>lcd_total_rows) row=lcd_total_rows; else row=y; 
*
0124:  MOVF   3E,W
0125:  SUBWF  22,W
0126:  BTFSC  03.0
0127:  GOTO   12B
0128:  MOVF   22,W
0129:  MOVWF  3F
012A:  GOTO   12D
012B:  MOVF   3E,W
012C:  MOVWF  3F
....................   
....................    switch(row) 
012D:  MOVF   3F,W
012E:  XORLW  01
012F:  BTFSC  03.2
0130:  GOTO   13B
0131:  XORLW  03
0132:  BTFSC  03.2
0133:  GOTO   13D
0134:  XORLW  01
0135:  BTFSC  03.2
0136:  GOTO   140
0137:  XORLW  07
0138:  BTFSC  03.2
0139:  GOTO   143
013A:  GOTO   146
....................    { 
....................       case 1:  row_addr=addr_row_one;     break; 
013B:  CLRF   41
013C:  GOTO   147
....................       case 2:  row_addr=addr_row_two;     break; 
013D:  MOVLW  40
013E:  MOVWF  41
013F:  GOTO   147
....................       case 3:  row_addr=addr_row_three;   break; 
0140:  MOVLW  14
0141:  MOVWF  41
0142:  GOTO   147
....................       case 4:  row_addr=addr_row_four;    break; 
0143:  MOVLW  54
0144:  MOVWF  41
0145:  GOTO   147
....................       default: row_addr=addr_row_one;     break;  
0146:  CLRF   41
....................    }  
....................     
....................    if (x>lcd_total_columns) column=lcd_total_columns; else column=x;  
0147:  MOVF   3D,W
0148:  SUBWF  23,W
0149:  BTFSC  03.0
014A:  GOTO   14E
014B:  MOVF   23,W
014C:  MOVWF  40
014D:  GOTO   150
014E:  MOVF   3D,W
014F:  MOVWF  40
....................    lcd_address=(row_addr+(column-1)); 
0150:  MOVLW  01
0151:  SUBWF  40,W
0152:  ADDWF  41,W
0153:  MOVWF  42
....................    lcd_send_byte(0x80|lcd_address,0); 
0154:  MOVF   42,W
0155:  IORLW  80
0156:  MOVWF  43
0157:  MOVWF  44
0158:  CLRF   45
0159:  CALL   0B0
015A:  RETURN
.................... } 
.................... 
.................... //Display the character on LCD screen. 
.................... void LCD_PUTC(char in_data) 
.................... {    
....................   switch(in_data) 
015B:  MOVF   3C,W
015C:  XORLW  0C
015D:  BTFSC  03.2
015E:  GOTO   166
015F:  XORLW  06
0160:  BTFSC  03.2
0161:  GOTO   168
0162:  XORLW  02
0163:  BTFSC  03.2
0164:  GOTO   175
0165:  GOTO   17A
....................    {  
....................      case '\f': lcd_clear();                       break;                
0166:  CALL   0CE
0167:  GOTO   17F
....................       
....................      case '\n': 
....................      new_row_request++; 
0168:  INCF   24,F
....................      if (new_row_request>lcd_total_rows) new_row_request=1; 
0169:  MOVF   24,W
016A:  SUBWF  22,W
016B:  BTFSC  03.0
016C:  GOTO   16F
016D:  MOVLW  01
016E:  MOVWF  24
....................      lcd_gotoxy(1, new_row_request); 
016F:  MOVLW  01
0170:  MOVWF  3D
0171:  MOVF   24,W
0172:  MOVWF  3E
0173:  CALL   124
....................      break; 
0174:  GOTO   17F
....................                   
....................      case '\b': lcd_send_byte(0x10,0);             break; 
0175:  MOVLW  10
0176:  MOVWF  44
0177:  CLRF   45
0178:  CALL   0B0
0179:  GOTO   17F
....................         
....................      default: lcd_send_byte(in_data,1);            break;      
017A:  MOVF   3C,W
017B:  MOVWF  44
017C:  MOVLW  01
017D:  MOVWF  45
017E:  CALL   0B0
....................       
....................    } 
017F:  RETURN
.................... } 
.................... 
.................... 
.................... 
.................... 
.................... void main(){
*
04CD:  MOVF   03,W
04CE:  ANDLW  1F
04CF:  MOVWF  03
04D0:  MOVLW  15
04D1:  BSF    03.5
04D2:  MOVWF  19
04D3:  MOVLW  A6
04D4:  MOVWF  18
04D5:  MOVLW  90
04D6:  BCF    03.5
04D7:  MOVWF  18
04D8:  MOVLW  FF
04D9:  MOVWF  20
04DA:  BSF    20.3
04DB:  MOVF   20,W
04DC:  BSF    03.5
04DD:  MOVWF  07
04DE:  BCF    03.5
04DF:  BSF    20.4
04E0:  MOVF   20,W
04E1:  BSF    03.5
04E2:  MOVWF  07
04E3:  MOVLW  31
04E4:  MOVWF  13
04E5:  MOVLW  28
04E6:  BCF    03.5
04E7:  MOVWF  14
04E8:  BSF    03.5
04E9:  BSF    14.7
04EA:  BCF    14.6
04EB:  MOVLW  01
04EC:  BCF    03.5
04ED:  MOVWF  24
04EE:  MOVLW  08
04EF:  MOVWF  25
04F0:  CLRF   28
04F1:  CLRF   27
04F2:  BSF    03.5
04F3:  BSF    1F.0
04F4:  BSF    1F.1
04F5:  BSF    1F.2
04F6:  BCF    1F.3
04F7:  MOVLW  07
04F8:  MOVWF  1C
04F9:  BCF    03.7
....................    unsigned long lecturaCAd_10bits;       // Declarar una variable para almacenar la lectura del ADC de 10 bits
....................    lcd_init(0x4E,16,2);                           // Inicializar el LCD
*
04FC:  MOVLW  4E
04FD:  MOVWF  2B
04FE:  MOVLW  10
04FF:  MOVWF  2C
0500:  MOVLW  02
0501:  MOVWF  2D
0502:  GOTO   0D8
....................    lcd_putc('\f');                       // Limpiar la pantalla del LCD
0503:  MOVLW  0C
0504:  MOVWF  3C
0505:  CALL   15B
....................    setup_port_a(ALL_ANALOG);              // Configurar el Puerto A como entrada anal√≥gica
0506:  BSF    03.5
0507:  BCF    1F.0
0508:  BCF    1F.1
0509:  BCF    1F.2
050A:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_INTERNAL);         // Configurar el reloj interno del ADC
050B:  BCF    1F.6
050C:  BCF    03.5
050D:  BSF    1F.6
050E:  BSF    1F.7
050F:  BSF    03.5
0510:  BSF    1F.7
0511:  BCF    03.5
0512:  BSF    1F.0
....................    set_adc_channel(0);                    // Configurar el canal del ADC a leer (en este caso, canal 0)
0513:  MOVLW  00
0514:  MOVWF  78
0515:  MOVF   1F,W
0516:  ANDLW  C7
0517:  IORWF  78,W
0518:  MOVWF  1F
....................    delay_us(20);                          // Esperar un breve tiempo para estabilizar el ADC
0519:  MOVLW  21
051A:  MOVWF  77
051B:  DECFSZ 77,F
051C:  GOTO   51B
....................    while(TRUE){
....................       lecturaCAd_10bits = read_adc();                     // Leer el valor del ADC de 10 bits
051D:  BSF    1F.2
051E:  BTFSC  1F.2
051F:  GOTO   51E
0520:  MOVF   1E,W
0521:  MOVWF  79
0522:  BSF    03.5
0523:  MOVF   1E,W
0524:  MOVWF  78
0525:  MOVF   79,W
0526:  BCF    03.5
0527:  MOVWF  2A
0528:  MOVF   78,W
0529:  MOVWF  29
....................       output_d(lecturaCAD_10bits / 4);                    // Enviar los 8 bits superiores del valor del ADC al Puerto B
052A:  RRF    2A,W
052B:  MOVWF  2C
052C:  RRF    29,W
052D:  MOVWF  2B
052E:  RRF    2C,F
052F:  RRF    2B,F
0530:  MOVLW  3F
0531:  ANDWF  2C,F
0532:  BSF    03.5
0533:  CLRF   08
0534:  BCF    03.5
0535:  MOVF   2B,W
0536:  MOVWF  08
....................       lcd_gotoxy(1,1);                                    // Posicionar el cursor del LCD en la primera l√≠nea, primera columna
0537:  MOVLW  01
0538:  MOVWF  3D
0539:  MOVWF  3E
053A:  CALL   124
....................       lcd_putc("Voltaje: ");                               // Mostrar el texto "Voltaje: "
053B:  MOVLW  0C
053C:  BSF    03.6
053D:  MOVWF  0D
053E:  MOVLW  00
053F:  MOVWF  0F
0540:  BCF    03.6
0541:  GOTO   180
....................       lcd_gotoxy(1,2);                                    // Posicionar el cursor del LCD en la segunda l√≠nea, primera columna
0542:  MOVLW  01
0543:  MOVWF  3D
0544:  MOVLW  02
0545:  MOVWF  3E
0546:  CALL   124
....................       printf(lcd_putc, "Vin: %4.2f mV", 4.88758 * lecturaCAD_10bits);  // Mostrar el voltaje calculado en milivoltios
0547:  MOVF   2A,W
0548:  MOVWF  2C
0549:  MOVF   29,W
054A:  MOVWF  2B
054B:  GOTO   1D8
054C:  MOVLW  0E
054D:  MOVWF  3F
054E:  MOVLW  67
054F:  MOVWF  3E
0550:  MOVLW  1C
0551:  MOVWF  3D
0552:  MOVLW  81
0553:  MOVWF  3C
0554:  MOVF   7A,W
0555:  MOVWF  43
0556:  MOVF   79,W
0557:  MOVWF  42
0558:  MOVF   78,W
0559:  MOVWF  41
055A:  MOVF   77,W
055B:  MOVWF  40
055C:  CALL   1F7
055D:  MOVF   7A,W
055E:  MOVWF  2E
055F:  MOVF   79,W
0560:  MOVWF  2D
0561:  MOVF   78,W
0562:  MOVWF  2C
0563:  MOVF   77,W
0564:  MOVWF  2B
0565:  MOVLW  11
0566:  BSF    03.6
0567:  MOVWF  0D
0568:  MOVLW  00
0569:  MOVWF  0F
056A:  BCF    03.0
056B:  MOVLW  05
056C:  BCF    03.6
056D:  MOVWF  2F
056E:  GOTO   26C
056F:  MOVLW  03
0570:  MOVWF  04
0571:  MOVF   2E,W
0572:  MOVWF  32
0573:  MOVF   2D,W
0574:  MOVWF  31
0575:  MOVF   2C,W
0576:  MOVWF  30
0577:  MOVF   2B,W
0578:  MOVWF  2F
0579:  MOVLW  02
057A:  MOVWF  33
057B:  GOTO   314
057C:  MOVLW  20
057D:  MOVWF  3C
057E:  CALL   15B
057F:  MOVLW  6D
0580:  MOVWF  3C
0581:  CALL   15B
0582:  MOVLW  56
0583:  MOVWF  3C
0584:  CALL   15B
....................       printf("\n\rCAD(10 bits): Decimal=%04Lu, Hexadecimal=0X%LX; PORTB=0X%LX (8 bits)",
....................       lecturaCAD_10bits,lecturaCAD_10bits,lecturaCAD_10bits/4);  // Mostrar informaci√≥n sobre el valor del ADC y el Puerto B en la consola
0585:  RRF    2A,W
0586:  MOVWF  2C
0587:  RRF    29,W
0588:  MOVWF  2B
0589:  RRF    2C,F
058A:  RRF    2B,F
058B:  MOVLW  3F
058C:  ANDWF  2C,F
058D:  MOVLW  18
058E:  BSF    03.6
058F:  MOVWF  0D
0590:  MOVLW  00
0591:  MOVWF  0F
0592:  BCF    03.0
0593:  MOVLW  18
0594:  BCF    03.6
0595:  MOVWF  2D
0596:  CALL   3F6
0597:  MOVLW  09
0598:  MOVWF  04
0599:  MOVF   2A,W
059A:  MOVWF  2E
059B:  MOVF   29,W
059C:  MOVWF  2D
059D:  GOTO   44F
059E:  MOVLW  26
059F:  BSF    03.6
05A0:  MOVWF  0D
05A1:  MOVLW  00
05A2:  MOVWF  0F
05A3:  BSF    03.0
05A4:  MOVLW  10
05A5:  BCF    03.6
05A6:  MOVWF  2D
05A7:  CALL   3F6
05A8:  MOVF   2A,W
05A9:  MOVWF  2D
05AA:  MOVLW  37
05AB:  MOVWF  2E
05AC:  CALL   4AA
05AD:  MOVF   29,W
05AE:  MOVWF  2D
05AF:  MOVLW  37
05B0:  MOVWF  2E
05B1:  CALL   4AA
05B2:  MOVLW  30
05B3:  BSF    03.6
05B4:  MOVWF  0D
05B5:  MOVLW  00
05B6:  MOVWF  0F
05B7:  BCF    03.0
05B8:  MOVLW  0A
05B9:  BCF    03.6
05BA:  MOVWF  2D
05BB:  CALL   3F6
05BC:  MOVF   2C,W
05BD:  MOVWF  2D
05BE:  MOVLW  37
05BF:  MOVWF  2E
05C0:  CALL   4AA
05C1:  MOVF   2B,W
05C2:  MOVWF  2D
05C3:  MOVLW  37
05C4:  MOVWF  2E
05C5:  CALL   4AA
05C6:  MOVLW  36
05C7:  BSF    03.6
05C8:  MOVWF  0D
05C9:  MOVLW  00
05CA:  MOVWF  0F
05CB:  BSF    03.0
05CC:  MOVLW  09
05CD:  BCF    03.6
05CE:  MOVWF  2D
05CF:  CALL   3F6
....................       delay_ms(500);                                       // Esperar medio segundo
05D0:  MOVLW  02
05D1:  MOVWF  2B
05D2:  MOVLW  FA
05D3:  MOVWF  3D
05D4:  CALL   03C
05D5:  DECFSZ 2B,F
05D6:  GOTO   5D2
05D7:  GOTO   51D
....................    }
.................... }
05D8:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
