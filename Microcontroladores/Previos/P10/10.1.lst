CCS PCM C Compiler, Version 5.093, 4770               26-may.-23 16:24

               Filename:   C:\Users\tobad\Desktop\p10\10.1.lst

               ROM used:   86 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           13 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   039
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F877.h>                 // Incluir el archivo de encabezado específico para el microcontrolador PIC 16F877
.................... //////////// Standard Header file for the PIC16F877 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877
.................... 
.................... #list
.................... 
.................... 
.................... #fuses HS,NOWDT,NOPROTECT           // Configurar los fusibles del microcontrolador
.................... 
.................... #use delay(clock=20000000)          // Configurar la biblioteca de retraso para un reloj de 20 MHz
.................... 
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7)    // Configurar el módulo de comunicación serial RS-232
.................... 
.................... int contador=0;                       // Declarar la variable "contador" de tipo entero
.................... 
.................... #int_EXT                            // Indicar que la siguiente función es la rutina de interrupción externa
.................... ext_int()
.................... {
....................    contador++;                      // Incrementar el valor de "contador" en 1
002F:  INCF   27,F
....................    output_d(contador);              // Enviar el valor actualizado de "contador" al puerto de salida D
0030:  BSF    03.5
0031:  CLRF   08
0032:  BCF    03.5
0033:  MOVF   27,W
0034:  MOVWF  08
0035:  BCF    0B.1
0036:  BCF    0A.3
0037:  BCF    0A.4
0038:  GOTO   01B
.................... }
.................... 
.................... void main() {
0039:  MOVF   03,W
003A:  ANDLW  1F
003B:  MOVWF  03
003C:  MOVLW  81
003D:  BSF    03.5
003E:  MOVWF  19
003F:  MOVLW  A6
0040:  MOVWF  18
0041:  MOVLW  90
0042:  BCF    03.5
0043:  MOVWF  18
0044:  CLRF   27
0045:  BSF    03.5
0046:  BSF    1F.0
0047:  BSF    1F.1
0048:  BSF    1F.2
0049:  BCF    1F.3
004A:  BCF    03.7
....................    ext_int_edge(L_TO_H);             // Configurar la interrupción externa para que se active en el cambio de bajo a alto del pin
004B:  BSF    01.6
....................    enable_interrupts(INT_EXT);       // Habilitar la interrupción externa
004C:  BCF    03.5
004D:  BSF    0B.4
....................    enable_interrupts(GLOBAL);        // Habilitar todas las interrupciones globales
004E:  MOVLW  C0
004F:  IORWF  0B,F
....................    output_d(0x00);                   // Establecer el valor inicial del puerto de salida D en 0x00
0050:  BSF    03.5
0051:  CLRF   08
0052:  BCF    03.5
0053:  CLRF   08
....................    while( TRUE ) {}                  // Bucle infinito para mantener el programa en ejecución continua
0054:  GOTO   054
.................... }
0055:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
