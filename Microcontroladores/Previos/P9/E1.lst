CCS PCM C Compiler, Version 5.093, 4770               18-may.-23 19:12

               Filename:   D:\Escuela\Semestre 23-2\LabMicros\Previos\P9\E1.lst

               ROM used:   103 words (1%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           9 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03D
0003:  NOP
.................... #include <16F877.h> // biblioteca del microprocesador
.................... //////////// Standard Header file for the PIC16F877 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877
.................... 
.................... #list
.................... 
.................... #fuses HS,NOWDT,NOPROTECT // conexiones eléctricas
.................... #use delay(clock=20000000) // 20 MHz
*
0027:  MOVLW  23
0028:  MOVWF  04
0029:  BCF    03.7
002A:  MOVF   00,W
002B:  BTFSC  03.2
002C:  GOTO   03A
002D:  MOVLW  06
002E:  MOVWF  78
002F:  CLRF   77
0030:  DECFSZ 77,F
0031:  GOTO   030
0032:  DECFSZ 78,F
0033:  GOTO   02F
0034:  MOVLW  7B
0035:  MOVWF  77
0036:  DECFSZ 77,F
0037:  GOTO   036
0038:  DECFSZ 00,F
0039:  GOTO   02D
003A:  BCF    0A.3
003B:  BCF    0A.4
003C:  GOTO   062 (RETURN)
.................... #use i2c(MASTER, SDA=PIN_C4, SCL=PIN_C3,SLOW, NOFORCE_SW) // configuración comunicación síncrona I2C
*
0004:  BCF    14.7
0005:  BCF    0C.3
0006:  MOVF   22,W
0007:  MOVWF  13
0008:  MOVLW  02
0009:  BTFSC  14.7
000A:  GOTO   012
000B:  BTFSS  0C.3
000C:  GOTO   00B
000D:  MOVLW  00
000E:  BSF    03.5
000F:  BTFSC  11.6
0010:  MOVLW  01
0011:  BCF    03.5
0012:  MOVWF  78
0013:  RETURN
.................... int contador=0; // variable contadora para aumenta
.................... // función para escribir por medio de i2c
.................... void escribir_i2c() {
.................... i2c_start(); // inicia comunicación i2c
0014:  BSF    03.5
0015:  BSF    11.0
0016:  BTFSC  11.0
0017:  GOTO   016
.................... i2c_write(0x42); // escribe 0x42 = 0100001 0 --> 0100001 = 33 dir, 0 = Escritura
0018:  MOVLW  42
0019:  BCF    03.5
001A:  MOVWF  22
001B:  CALL   004
.................... i2c_write(contador); // escribe la variable global contador
001C:  MOVF   21,W
001D:  MOVWF  22
001E:  CALL   004
.................... i2c_stop(); // finaliza comunicación i2c
001F:  BSF    03.5
0020:  BSF    11.2
0021:  BTFSC  11.2
0022:  GOTO   021
0023:  BCF    03.5
0024:  BCF    0A.3
0025:  BCF    0A.4
0026:  GOTO   05D (RETURN)
.................... }
.................... //el programa es un cronómetro de medio segundo
.................... void main() {
*
003D:  MOVF   03,W
003E:  ANDLW  1F
003F:  MOVWF  03
0040:  MOVLW  FF
0041:  MOVWF  20
0042:  BSF    20.3
0043:  MOVF   20,W
0044:  BSF    03.5
0045:  MOVWF  07
0046:  BCF    03.5
0047:  BSF    20.4
0048:  MOVF   20,W
0049:  BSF    03.5
004A:  MOVWF  07
004B:  MOVLW  31
004C:  MOVWF  13
004D:  MOVLW  28
004E:  BCF    03.5
004F:  MOVWF  14
0050:  BSF    03.5
0051:  BSF    14.7
0052:  BCF    14.6
0053:  BCF    03.5
0054:  CLRF   21
0055:  BSF    03.5
0056:  BSF    1F.0
0057:  BSF    1F.1
0058:  BSF    1F.2
0059:  BCF    1F.3
005A:  BCF    03.7
.................... while(true) {
.................... escribir_i2c(); // escribe en consola
005B:  BCF    03.5
005C:  GOTO   014
.................... delay_ms(500); // retardo de medio segundo
005D:  MOVLW  02
005E:  MOVWF  22
005F:  MOVLW  FA
0060:  MOVWF  23
0061:  GOTO   027
0062:  DECFSZ 22,F
0063:  GOTO   05F
.................... contador++; // aumenta valor de contador
0064:  INCF   21,F
0065:  GOTO   05C
.................... }
.................... }
.................... 
0066:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
