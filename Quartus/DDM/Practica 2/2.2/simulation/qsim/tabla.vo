// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 19.1.0 Build 670 09/22/2019 SJ Lite Edition"

// DATE "09/01/2022 18:37:21"

// 
// Device: Altera 10M50DAF484C7G Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module tabla (
	A,
	L);
input 	[2:0] A;
output 	[6:0] L;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \L[0]~output_o ;
wire \L[1]~output_o ;
wire \L[2]~output_o ;
wire \L[3]~output_o ;
wire \L[4]~output_o ;
wire \L[5]~output_o ;
wire \L[6]~output_o ;
wire \A[2]~input_o ;
wire \A[0]~input_o ;
wire \A[1]~input_o ;
wire \Mux2~0_combout ;
wire \Mux1~0_combout ;
wire \Mux0~0_combout ;


fiftyfivenm_io_obuf \L[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\L[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \L[0]~output .bus_hold = "false";
defparam \L[0]~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_obuf \L[1]~output (
	.i(!\Mux2~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\L[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \L[1]~output .bus_hold = "false";
defparam \L[1]~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_obuf \L[2]~output (
	.i(!\Mux1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\L[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \L[2]~output .bus_hold = "false";
defparam \L[2]~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_obuf \L[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\L[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \L[3]~output .bus_hold = "false";
defparam \L[3]~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_obuf \L[4]~output (
	.i(\A[2]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\L[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \L[4]~output .bus_hold = "false";
defparam \L[4]~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_obuf \L[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\L[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \L[5]~output .bus_hold = "false";
defparam \L[5]~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_obuf \L[6]~output (
	.i(!\Mux0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\L[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \L[6]~output .bus_hold = "false";
defparam \L[6]~output .open_drain_output = "false";
// synopsys translate_on

fiftyfivenm_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .listen_to_nsleep_signal = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .listen_to_nsleep_signal = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.nsleep(vcc),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .listen_to_nsleep_signal = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

fiftyfivenm_lcell_comb \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (!\A[2]~input_o  & (!\A[0]~input_o  & !\A[1]~input_o ))

	.dataa(gnd),
	.datab(\A[2]~input_o ),
	.datac(\A[0]~input_o ),
	.datad(\A[1]~input_o ),
	.cin(gnd),
	.combout(\Mux2~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = 16'h0003;
defparam \Mux2~0 .sum_lutc_input = "datac";
// synopsys translate_on

fiftyfivenm_lcell_comb \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (\A[2]~input_o ) # ((!\A[0]~input_o  & !\A[1]~input_o ))

	.dataa(\A[2]~input_o ),
	.datab(gnd),
	.datac(\A[0]~input_o ),
	.datad(\A[1]~input_o ),
	.cin(gnd),
	.combout(\Mux1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = 16'hAAAF;
defparam \Mux1~0 .sum_lutc_input = "datac";
// synopsys translate_on

fiftyfivenm_lcell_comb \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (\A[2]~input_o ) # (\A[1]~input_o )

	.dataa(\A[2]~input_o ),
	.datab(\A[1]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = 16'hEEEE;
defparam \Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign L[0] = \L[0]~output_o ;

assign L[1] = \L[1]~output_o ;

assign L[2] = \L[2]~output_o ;

assign L[3] = \L[3]~output_o ;

assign L[4] = \L[4]~output_o ;

assign L[5] = \L[5]~output_o ;

assign L[6] = \L[6]~output_o ;

endmodule
